@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Formulario de Cotización</h2>
    <form method="post" action="GenerarPdf">
        <!-- Información del Cliente -->
        <h3>Información del Cliente</h3>
        <div class="client-info">
            <div class="form-group">
                <label for="cliente">Cliente:</label>
                <select id="cliente" name="cliente" required onchange="autocompletarCliente()">
                    <option value="" selected disabled>Selecciona un cliente</option>
                    @foreach (var cliente in ViewBag.Clientes)
                    {
                        <option value="@cliente.ClienteId" data-nombre="@cliente.Nombre @cliente.Apellidos"
                                data-documento="@cliente.NumeroIdentificacion"
                                data-telefono="@cliente.NumeroTelefono"
                                data-email="@cliente.Correo">
                            @cliente.Nombre @cliente.Apellidos
                        </option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="nombre">Nombre:</label>
                <input type="text" id="nombre" name="nombre" readonly>
            </div>
            <div class="form-group">
                <label for="telefono">Teléfono:</label>
                <input type="text" id="telefono" name="telefono" readonly>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" readonly>
            </div>
        </div>

        <!-- Detalles del Producto/Servicio -->
        <h3>Detalles del Producto/Servicio</h3>
        <div class="table-container">
            <table id="productos-table">
                <thead>
                    <tr>
                        <th>Código</th>
                        <th>Cant.</th>
                        <th>Descripción</th>
                        <th>Precio Unit.</th>
                        <th>Precio Total</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="productos-body">
                    <tr>
                        <td>
                            <select name="codigos[]" class="codigo-producto" required onchange="actualizarProducto(this)">
                                <option value="" selected disabled>Selecciona un producto</option>
                                @foreach (var producto in ViewBag.Productos)
                                {
                                    <option value="@producto.CodigoBarra"
                                            data-descripcion="@producto.Descripcion"
                                            data-precio="@producto.Precio">
                                        @producto.CodigoBarra
                                    </option>
                                }
                            </select>
                        </td>
                        <td><input type="number" name="cantidades[]" value="1" required oninput="calcularTotal(this)"></td>
                        <td><input type="text" name="descripciones[]" readonly></td>
                        <td><input type="number" step="0.01" name="preciosUnitarios[]" readonly></td>
                        <td><input type="number" step="0.01" class="total" readonly></td>
                        <td><button type="button" class="delete">Eliminar</button></td>
                    </tr>
                </tbody>
            </table>
        </div>

        <button type="button" id="agregar-producto">Agregar Producto</button>

        <!-- Condiciones -->
        <h3>Condiciones</h3>
        <div class="conditions-info">
            <div class="form-group">
                <label for="condiciones-pago">Condiciones de Pago:</label>
                <select id="condiciones-pago" name="condicionesPago" required>
                    <option>Contado</option>
                    <option>Crédito</option>
                </select>
            </div>
            <div class="form-group">
                <label for="validez-oferta">Validez de la oferta:</label>
                <input type="text" id="validez-oferta" name="validezOferta" value="15 días" required>
            </div>
        </div>

        <!-- Botón de Guardar Cotización -->
        <button type="submit">Generar PDF</button>
    </form>
</div>

<script>
    // Función para autocompletar el cliente
    function autocompletarCliente() {
        const select = document.getElementById('cliente');
        const optionSelected = select.options[select.selectedIndex];
        document.getElementById('nombre').value = optionSelected.getAttribute('data-nombre');
        document.getElementById('telefono').value = optionSelected.getAttribute('data-telefono');
        document.getElementById('email').value = optionSelected.getAttribute('data-email');
    }

    // Función para actualizar los detalles del producto seleccionado
    function actualizarProducto(select) {
        const optionSelected = select.options[select.selectedIndex];
        const row = select.closest('tr');
        const descripcion = row.querySelector('input[name="descripciones[]"]');
        const precioUnitario = row.querySelector('input[name="preciosUnitarios[]"]');
        const cantidad = row.querySelector('input[name="cantidades[]"]');
        const total = row.querySelector('.total');

        descripcion.value = optionSelected.getAttribute('data-descripcion');
        precioUnitario.value = optionSelected.getAttribute('data-precio');

        // Calcular el total con ITBIS (18%) y la cantidad
        calcularTotal(cantidad);
    }

    // Función para calcular el total por producto con ITBIS y cantidad
    function calcularTotal(inputCantidad) {
        const row = inputCantidad.closest('tr');
        const precioUnitario = parseFloat(row.querySelector('input[name="preciosUnitarios[]"]').value) || 0;
        const cantidad = parseFloat(inputCantidad.value) || 1;
        const total = row.querySelector('.total');

        // Calcular el total con ITBIS (18%)
        const precioConITBIS = precioUnitario * 1.18;
        total.value = (precioConITBIS * cantidad).toFixed(2);
    }
</script>

<!-- Script para manejar el agregado de productos -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Función para agregar una nueva fila
        $("#agregar-producto").click(function () {
            var nuevaFila = `
                    <tr>
                        <td><input type="text" name="codigos[]" placeholder="Código" required></td>
                        <td><input type="number" name="cantidades[]" value="1" required></td>
                        <td><input type="text" name="descripciones[]" placeholder="Descripción" required></td>
                        <td><input type="number" step="0.01" name="preciosUnitarios[]" value="0.00" required></td>
                        <td><input type="number" step="0.01" class="total" value="0.00" readonly></td>
                        <td><button type="button" class="delete">Eliminar</button></td>
                    </tr>
                `;
            $("#productos-body").append(nuevaFila);
        });

        // Función para eliminar una fila
        $(document).on("click", ".delete", function () {
            $(this).closest("tr").remove();
        });

        // Función para actualizar el total de cada producto cuando cambia el precio unitario o la cantidad
        $(document).on("input", "[name='cantidades[]'], [name='preciosUnitarios[]']", function () {
            var row = $(this).closest("tr");
            var cantidad = row.find("[name='cantidades[]']").val();
            var precioUnitario = row.find("[name='preciosUnitarios[]']").val();
            var total = (cantidad * precioUnitario).toFixed(2);
            row.find(".total").val(total);
        });
    });
</script>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
    }

    .container {
        width: 100%;
        max-width: 1300px;
        padding: 20px;
        margin: 20px auto;
    }

    h2 {
        text-align: center;
        margin-bottom: 20px;
    }

    .client-info, .conditions-info {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
        margin-bottom: 20px;
    }

    .form-group label {
        margin-bottom: 5px;
    }

    .form-group input, .form-group select {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        width: 100%;
        box-sizing: border-box;
    }

    .table-container {
        width: 100%;
        overflow-x: auto;
        margin-bottom: 20px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

        table th,
        table td {
            padding: 8px;
            border-bottom: 1px solid #ddd;
            text-align: center;
        }

    button {
        padding: 8px 16px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        margin-bottom: 20px;
    }

        button.delete {
            background-color: #dc3545;
        }

            button.delete:hover {
                background-color: #c82333;
            }

    .btn-primary {
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 8px 16px;
        margin-bottom: 40px;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }
</style>
