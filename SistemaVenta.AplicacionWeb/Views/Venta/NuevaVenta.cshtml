@model SistemaVenta.AplicacionWeb.Models.ViewModels.CxCobrarViewModel

@{
    ViewData["Title"] = "Nueva Venta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Estilos {
    <link href="~/vendor/select2/select2.min.css" rel="stylesheet">
    <style>
        .select2 {
            width: 100% !important;
        }
    </style>
}

@if (TempData["MensajeError"] != null)
{
    <div class="alert alert-danger">
        @TempData["MensajeError"]
    </div>
}

<div class="container-fluid">
      <form id="formNuevaVenta" method="POST" action="/Venta/CrearVenta">
    <div class="row">
        <div class="col-sm-8">
            <div class="row">
                <div class="col-sm-12">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3 bg-second-primary">
                            <h6 class="m-0 font-weight-bold text-white">Cliente</h6>
                        </div>
                        <div class="card-body">
                            <div class="form-row">
                                <div class="form-group col-sm-6">
                                    <label for="cboClientes">Seleccione un Cliente</label>
                                    <select class="form-control form-control-sm" id="cboClientes">
                                        <option value="">Seleccione un cliente</option>
                                        @if (ViewBag.Clientes != null)
                                        {
                                            foreach (var cliente in ViewBag.Clientes)
                                            {
                                                <option value="@cliente.NumeroIdentificacion" data-nombre="@cliente.Nombre" data-clienteid="@cliente.ClienteId">
                                                    @($"{cliente.Nombre} {cliente.Apellidos}")
                                                </option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group col-sm-6">
                                    <label for="txtDocumentoCliente">Documento del Cliente</label>
                                    <input type="text" value="0" class="form-control form-control-sm" id="txtDocumentoCliente" placeholder="Número de documento" readonly />
                                </div>
                                <div class="form-group col-sm-6">
                                    <label for="txtNombreCliente">Nombre del Cliente</label>
                                    <input type="text" value="Contado" class="form-control form-control-sm" id="txtNombreCliente" placeholder="Nombre completo" readonly />
                                </div>
                                <div class="form-group col-sm-6">
                                    <label for="txtClienteId">ID del Cliente</label>
                                        <input type="text" value="0" class="form-control form-control-sm" id="txtClienteId" name="ClienteID" placeholder="ID del cliente" readonly />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3 bg-second-primary">
                            <h6 class="m-0 font-weight-bold text-white">Productos</h6>
                        </div>
                        <div class="card-body">
                            <div class="form-row">
                                <div class="form-group col-sm-12">
                                    <select class="form-control form-control-sm" id="cboBuscarProducto">
                                        <option value=""></option>
                                    </select>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <table class="table table-striped table-sm" id="tbProducto">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>Producto</th>
                                                <th>Cantidad</th> <!-- Asegúrate de que este encabezado sea correcto -->
                                                <th>Precio</th>
                                                <th>Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="row">
                <div class="col-sm-12">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3 bg-second-primary">
                            <h6 class="m-0 font-weight-bold text-white">Detalle</h6>
                        </div>
                        <div class="card-body">
                            <div class="input-group input-group-sm mb-3">
                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="cboTipoComprobante">Tipo Comprobante</label>
                                </div>
                                <select class="custom-select" id="cboTipoComprobante">
                                    <option value="">Seleccione un tipo</option>
                                    <option value="B01">Factura de Crédito Fiscal (B01)</option>
                                    <option value="B02">Factura de Consumo (B02)</option>
                                    <option value="B13">Comprobante de gasto menor(B02)</option>
                                </select>
                            </div>

                            <div class="input-group input-group-sm mb-3">
                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="cboTipoDocumentoVenta">Tipo</label>
                                </div>
                                <select class="custom-select" id="cboTipoDocumentoVenta">
                                </select>
                            </div>
                            <div class="input-group input-group-sm mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="inputGroupSubTotal">Sub Total</span>
                                </div>
                                <input type="text" class="form-control text-right" aria-label="Small" aria-describedby="inputGroupSubTotal" id="txtSubTotal" disabled>
                            </div>
                            <div class="input-group input-group-sm mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="inputGroupIGV">IGV(18%)</span>
                                </div>
                                <input type="text" class="form-control text-right" aria-label="Small" aria-describedby="inputGroupIGV" id="txtIGV" disabled>
                            </div>
                            <div class="input-group input-group-sm mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="inputGroupTotal">Total</span>
                                </div>
                                <input type="text" class="form-control text-right" aria-label="Small" name="MontoTotal" aria-describedby="inputGroupTotal" id="txtTotal" readonly>
                            </div>
                            <div class="input-group input-group-sm mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="inputGroupMontoPagar">Monto a Pagar</span>
                                </div>
                                <input type="number" value="0" class="form-control text-right" aria-label="Small" aria-describedby="inputGroupMontoPagar" id="txtMontoPagar" value="0">
                            </div>
                            <div class="input-group input-group-sm mb-3">
                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="cboMetodoPago">Método de Pago</label>
                                </div>
                                <select class="custom-select" id="cboMetodoPago">
                                    <option value="Efectivo">Efectivo</option>
                                    <option value="Tarjeta de Crédito">Tarjeta de Crédito</option>
                                    <option value="Transferencia Bancaria">Transferencia Bancaria</option>
                                    <option value="Otro">Otro</option>
                                </select>
                            </div>

                            <!-- Campo para Monto Restante -->
                            <div class="input-group input-group-sm mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="inputGroupMontoRestante">Monto Restante</span>
                                </div>
                                <input type="text" value="0" class="form-control text-right monto-restante" aria-label="Small" aria-describedby="inputGroupMontoRestante" id="txtMontoRestante" readonly>
                            </div>

                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="chkIGV">
                                <label class="form-check-label" for="chkIGV">
                                    Aplicar ITBIS (18%)
                                </label>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <div class="card shadow">
                        <div class="card-body">
                            <div class="form-group mb-0">
                                <button type="submit" class="btn btn-success btn-sm btn-block" id="btnTerminarVenta">Terminar Venta</button>
                                    <div class="form-check mb-3">
        <input class="form-check-input" type="checkbox" id="chkFacturaCredito">
        <label class="form-check-label" for="chkFacturaCredito">
            Factura a Crédito
        </label>
    </div>
                            </div>






                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    </form>
</div>
<style>
    .monto-restante {
        font-weight: bold;
    }

    .monto-restante-negativo {
        color: red;
    }

    .monto-restante-positivo {
        color: blue;
    }
</style>
   
    @section Scripts {
    <script>
        // Función para cambiar el color del monto restante
        function actualizarMontoRestante() {
            var montoRestante = parseFloat(document.getElementById("txtMontoRestante").value) || 0;
            var montoRestanteElement = document.getElementById("txtMontoRestante");

            // Limpiar las clases previas
            montoRestanteElement.classList.remove("monto-restante-negativo", "monto-restante-positivo");

            // Agregar la clase correspondiente según el valor
            if (montoRestante < 0) {
                montoRestanteElement.classList.add("monto-restante-negativo");
            } else if (montoRestante > 0) {
                montoRestanteElement.classList.add("monto-restante-positivo");
            }
        }

        // Llamar a la función cuando el valor cambie
        document.getElementById("txtMontoRestante").addEventListener("input", actualizarMontoRestante);
    </script>
        <script>
        document.addEventListener("DOMContentLoaded", function () {
            const checkboxCredito = document.getElementById("chkFacturaCredito");
            const comboMetodoPago = document.getElementById("cboMetodoPago");

            // Asegúrate de que exista la opción "Crédito" en el combo box
            const optionCredito = Array.from(comboMetodoPago.options).find(option => option.value === "Crédito");

            if (!optionCredito) {
                const nuevaOpcion = document.createElement("option");
                nuevaOpcion.value = "Crédito";
                nuevaOpcion.textContent = "Crédito";
                comboMetodoPago.appendChild(nuevaOpcion);
            }

            checkboxCredito.addEventListener("change", function () {
                if (checkboxCredito.checked) {
                    comboMetodoPago.value = "Crédito";
                    comboMetodoPago.disabled = true;
                } else {
                    comboMetodoPago.disabled = false;
                }
            });
        });

        </script>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const cboMetodoPago = document.getElementById("cboMetodoPago");
                const txtTotal = document.getElementById("txtTotal");
                const txtMontoPagar = document.getElementById("txtMontoPagar");

                // Función para calcular el monto total ajustado
                function calcularMontoTotal() {
                    let total = parseFloat(txtTotal.dataset.originalTotal || txtTotal.value) || 0;

                    // Almacena el total original una sola vez
                    if (!txtTotal.dataset.originalTotal) {
                        txtTotal.dataset.originalTotal = total;
                    }

                    if (cboMetodoPago.value === "Tarjeta de Crédito") {
                        total += total * 0.02; // Agregar el 2%
                    } else {
                        total = parseFloat(txtTotal.dataset.originalTotal); // Restaurar el total original
                    }

                    txtTotal.value = total.toFixed(2); // Mostrar con 2 decimales
                }

                // Escuchar el cambio en el método de pago
                cboMetodoPago.addEventListener("change", calcularMontoTotal);
            });
        </script>

        <script>
            document.getElementById('txtMontoPagar').addEventListener('input', function () {
                const total = parseFloat(document.getElementById('txtTotal').value) || 0;
                const montoPagar = parseFloat(this.value) || 0;

                // Invertir el cálculo del restante
                const restante = montoPagar - total;

                // Actualizar el campo del monto restante
                document.getElementById('txtMontoRestante').value = restante.toFixed(2);
            });
        </script>

        <script>
            document.getElementById('chkIGV').addEventListener('change', function () {
                const subTotal = parseFloat(document.getElementById('txtSubTotal').value || 0);
                const igvField = document.getElementById('txtIGV');
                const totalField = document.getElementById('txtTotal');

                if (this.checked) {
                    const igv = subTotal * 0.18;
                    igvField.value = igv.toFixed(2);
                    totalField.value = (subTotal + igv).toFixed(2);
                } else {
                    igvField.value = '0.00';
                    totalField.value = subTotal.toFixed(2);
                }
            });

        </script>
        <script>
        document.getElementById("btnTerminarVenta").addEventListener("click", function () {
            const data = {
                clienteId: document.getElementById("txtClienteId").value,
                nombreCliente: document.getElementById("txtNombreCliente").value,
                documentoCliente: document.getElementById("txtDocumentoCliente").value,
                tipoComprobante: document.getElementById("cboTipoComprobante").value, // Tipo de comprobante
                tipoDocumento: document.getElementById("cboTipoDocumentoVenta").value,
                subTotal: document.getElementById("txtSubTotal").value,
                igv: document.getElementById("txtIGV").value,
                total: document.getElementById("txtTotal").value,
                montoPagar: parseFloat(document.getElementById("txtMontoPagar").value) || 0,
                montoRestante: document.getElementById("txtMontoRestante").value,
                metodoPago: document.getElementById("cboMetodoPago").value,
                productos: Array.from(document.querySelectorAll("#tbProducto tbody tr")).map(row => ({
                    nombreProducto: row.cells[1].innerText,
                    cantidad: row.cells[2].innerText,
                    precio: row.cells[3].innerText,
                    total: row.cells[4].innerText
                }))
            };

            fetch(`/Venta/GenerarFactura?tipoComprobante=${document.getElementById("cboTipoComprobante").value}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.blob();
                })
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);

                    // Crear un objeto iframe invisible para cargar el PDF
                    const iframe = document.createElement('iframe');
                    iframe.style.display = 'none';
                    iframe.src = url;
                    document.body.appendChild(iframe);

                    // Imprimir automáticamente tan pronto como el iframe cargue
                    iframe.onload = () => {
                        iframe.contentWindow.print();  // Imprime el PDF cargado en el iframe
                        iframe.contentWindow.onafterprint = () => {
                            document.body.removeChild(iframe);  // Elimina el iframe después de imprimir
                        };
                    };
                })
                .catch(error => console.error('Error:', error));
        });



        </script>
        <script>


            document.getElementById('cboClientes').addEventListener('change', function () {
                var selectedOption = this.options[this.selectedIndex];

                var documentoCliente = selectedOption.value;
                var nombreCliente = selectedOption.getAttribute('data-nombre');
                var clienteId = selectedOption.getAttribute('data-clienteid');

                document.getElementById('txtDocumentoCliente').value = documentoCliente;
                document.getElementById('txtNombreCliente').value = nombreCliente;
                document.getElementById('txtClienteId').value = clienteId;
            });

            
        </script>
    <script>
        document.getElementById('btnTerminarVenta').addEventListener('click', function (event) {
            // Prevenir el envío del formulario por defecto
            event.preventDefault();

            // Verifica si el checkbox está activado
            if (document.getElementById('chkFacturaCredito').checked) {
                // Envía el formulario solo si el checkbox está marcado
                document.getElementById('formNuevaVenta').submit();
            } else {

            }
        });
    </script>
        <script src="~/vendor/select2/select2.min.js"></script>
        <script src="~/vendor/select2/es.min.js"></script>
        <script src="~/js/vistas/Nueva_Venta.js"></script>
    }
